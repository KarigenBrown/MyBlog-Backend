/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.daos;


import java.util.List;

import me.myblog.framework.domain.jooq.tables.UserRole;
import me.myblog.framework.domain.jooq.tables.records.UserRoleRecord;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * 用户和角色关联表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserRoleDao extends DAOImpl<UserRoleRecord, me.myblog.framework.domain.jooq.tables.pojos.UserRole, Record2<Long, Long>> {

    /**
     * Create a new UserRoleDao without any configuration
     */
    public UserRoleDao() {
        super(UserRole.USER_ROLE, me.myblog.framework.domain.jooq.tables.pojos.UserRole.class);
    }

    /**
     * Create a new UserRoleDao with an attached configuration
     */
    public UserRoleDao(Configuration configuration) {
        super(UserRole.USER_ROLE, me.myblog.framework.domain.jooq.tables.pojos.UserRole.class, configuration);
    }

    @Override
    public Record2<Long, Long> getId(me.myblog.framework.domain.jooq.tables.pojos.UserRole object) {
        return compositeKeyRecord(object.getUserId(), object.getRoleId());
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.UserRole> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserRole.USER_ROLE.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.UserRole> fetchByUserId(Long... values) {
        return fetch(UserRole.USER_ROLE.USER_ID, values);
    }

    /**
     * Fetch records that have <code>role_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.UserRole> fetchRangeOfRoleId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserRole.USER_ROLE.ROLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_id IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.UserRole> fetchByRoleId(Long... values) {
        return fetch(UserRole.USER_ROLE.ROLE_ID, values);
    }
}
