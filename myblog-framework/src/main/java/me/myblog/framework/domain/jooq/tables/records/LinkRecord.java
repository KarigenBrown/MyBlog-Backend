/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.records;


import java.time.LocalDateTime;

import me.myblog.framework.domain.jooq.tables.Link;
import me.myblog.framework.domain.jooq.tables.interfaces.ILink;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 友链
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class LinkRecord extends UpdatableRecordImpl<LinkRecord> implements Record10<Long, String, String, String, String, String, Long, LocalDateTime, Long, LocalDateTime>, ILink {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>myblog.link.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>myblog.link.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>myblog.link.name</code>.
     */
    @Override
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>myblog.link.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>myblog.link.logo</code>.
     */
    @Override
    public void setLogo(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>myblog.link.logo</code>.
     */
    @Override
    public String getLogo() {
        return (String) get(2);
    }

    /**
     * Setter for <code>myblog.link.description</code>.
     */
    @Override
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>myblog.link.description</code>.
     */
    @Override
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>myblog.link.address</code>. 网站地址
     */
    @Override
    public void setAddress(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>myblog.link.address</code>. 网站地址
     */
    @Override
    public String getAddress() {
        return (String) get(4);
    }

    /**
     * Setter for <code>myblog.link.status</code>. 审核状态
     * (0代表审核通过，1代表审核未通过，2代表未审核)
     */
    @Override
    public void setStatus(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>myblog.link.status</code>. 审核状态
     * (0代表审核通过，1代表审核未通过，2代表未审核)
     */
    @Override
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>myblog.link.create_by</code>.
     */
    @Override
    public void setCreateBy(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>myblog.link.create_by</code>.
     */
    @Override
    public Long getCreateBy() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>myblog.link.create_time</code>.
     */
    @Override
    public void setCreateTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>myblog.link.create_time</code>.
     */
    @Override
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>myblog.link.update_by</code>.
     */
    @Override
    public void setUpdateBy(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>myblog.link.update_by</code>.
     */
    @Override
    public Long getUpdateBy() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>myblog.link.update_time</code>.
     */
    @Override
    public void setUpdateTime(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>myblog.link.update_time</code>.
     */
    @Override
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, String, String, String, String, String, Long, LocalDateTime, Long, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, String, String, String, String, String, Long, LocalDateTime, Long, LocalDateTime> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Link.LINK.ID;
    }

    @Override
    public Field<String> field2() {
        return Link.LINK.NAME;
    }

    @Override
    public Field<String> field3() {
        return Link.LINK.LOGO;
    }

    @Override
    public Field<String> field4() {
        return Link.LINK.DESCRIPTION;
    }

    @Override
    public Field<String> field5() {
        return Link.LINK.ADDRESS;
    }

    @Override
    public Field<String> field6() {
        return Link.LINK.STATUS;
    }

    @Override
    public Field<Long> field7() {
        return Link.LINK.CREATE_BY;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Link.LINK.CREATE_TIME;
    }

    @Override
    public Field<Long> field9() {
        return Link.LINK.UPDATE_BY;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Link.LINK.UPDATE_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getLogo();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public String component5() {
        return getAddress();
    }

    @Override
    public String component6() {
        return getStatus();
    }

    @Override
    public Long component7() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime component8() {
        return getCreateTime();
    }

    @Override
    public Long component9() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime component10() {
        return getUpdateTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getLogo();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public String value5() {
        return getAddress();
    }

    @Override
    public String value6() {
        return getStatus();
    }

    @Override
    public Long value7() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime value8() {
        return getCreateTime();
    }

    @Override
    public Long value9() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime value10() {
        return getUpdateTime();
    }

    @Override
    public LinkRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LinkRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public LinkRecord value3(String value) {
        setLogo(value);
        return this;
    }

    @Override
    public LinkRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public LinkRecord value5(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public LinkRecord value6(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public LinkRecord value7(Long value) {
        setCreateBy(value);
        return this;
    }

    @Override
    public LinkRecord value8(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public LinkRecord value9(Long value) {
        setUpdateBy(value);
        return this;
    }

    @Override
    public LinkRecord value10(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public LinkRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, Long value7, LocalDateTime value8, Long value9, LocalDateTime value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ILink from) {
        setId(from.getId());
        setName(from.getName());
        setLogo(from.getLogo());
        setDescription(from.getDescription());
        setAddress(from.getAddress());
        setStatus(from.getStatus());
        setCreateBy(from.getCreateBy());
        setCreateTime(from.getCreateTime());
        setUpdateBy(from.getUpdateBy());
        setUpdateTime(from.getUpdateTime());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends ILink> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinkRecord
     */
    public LinkRecord() {
        super(Link.LINK);
    }

    /**
     * Create a detached, initialised LinkRecord
     */
    public LinkRecord(Long id, String name, String logo, String description, String address, String status, Long createBy, LocalDateTime createTime, Long updateBy, LocalDateTime updateTime) {
        super(Link.LINK);

        setId(id);
        setName(name);
        setLogo(logo);
        setDescription(description);
        setAddress(address);
        setStatus(status);
        setCreateBy(createBy);
        setCreateTime(createTime);
        setUpdateBy(updateBy);
        setUpdateTime(updateTime);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LinkRecord
     */
    public LinkRecord(me.myblog.framework.domain.jooq.tables.pojos.Link value) {
        super(Link.LINK);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setLogo(value.getLogo());
            setDescription(value.getDescription());
            setAddress(value.getAddress());
            setStatus(value.getStatus());
            setCreateBy(value.getCreateBy());
            setCreateTime(value.getCreateTime());
            setUpdateBy(value.getUpdateBy());
            setUpdateTime(value.getUpdateTime());
            resetChangedOnNotNull();
        }
    }
}
