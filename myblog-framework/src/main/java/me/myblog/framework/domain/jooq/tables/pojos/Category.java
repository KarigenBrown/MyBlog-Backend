/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;

import me.myblog.framework.domain.jooq.tables.interfaces.ICategory;


/**
 * 分类表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "category",
    schema = "myblog"
)
public class Category implements ICategory {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final String name;
    private final Long pid;
    private final String description;
    private final String status;
    private final Long createBy;
    private final LocalDateTime createTime;
    private final Long updateBy;
    private final LocalDateTime updateTime;

    public Category(ICategory value) {
        this.id = value.getId();
        this.name = value.getName();
        this.pid = value.getPid();
        this.description = value.getDescription();
        this.status = value.getStatus();
        this.createBy = value.getCreateBy();
        this.createTime = value.getCreateTime();
        this.updateBy = value.getUpdateBy();
        this.updateTime = value.getUpdateTime();
    }

    public Category(
        Long id,
        String name,
        Long pid,
        String description,
        String status,
        Long createBy,
        LocalDateTime createTime,
        Long updateBy,
        LocalDateTime updateTime
    ) {
        this.id = id;
        this.name = name;
        this.pid = pid;
        this.description = description;
        this.status = status;
        this.createBy = createBy;
        this.createTime = createTime;
        this.updateBy = updateBy;
        this.updateTime = updateTime;
    }

    /**
     * Getter for <code>myblog.category.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>myblog.category.name</code>. 分类名
     */
    @Column(name = "name", length = 128)
    @Size(max = 128)
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>myblog.category.pid</code>. 父分类id，如果没有父分类为-1
     */
    @Column(name = "pid")
    @Override
    public Long getPid() {
        return this.pid;
    }

    /**
     * Getter for <code>myblog.category.description</code>. 描述
     */
    @Column(name = "description", length = 512)
    @Size(max = 512)
    @Override
    public String getDescription() {
        return this.description;
    }

    /**
     * Getter for <code>myblog.category.status</code>. 状态（0正常，1禁用）
     */
    @Column(name = "status", length = 1)
    @Size(max = 1)
    @Override
    public String getStatus() {
        return this.status;
    }

    /**
     * Getter for <code>myblog.category.create_by</code>.
     */
    @Column(name = "create_by")
    @Override
    public Long getCreateBy() {
        return this.createBy;
    }

    /**
     * Getter for <code>myblog.category.create_time</code>.
     */
    @Column(name = "create_time")
    @Override
    public LocalDateTime getCreateTime() {
        return this.createTime;
    }

    /**
     * Getter for <code>myblog.category.update_by</code>.
     */
    @Column(name = "update_by")
    @Override
    public Long getUpdateBy() {
        return this.updateBy;
    }

    /**
     * Getter for <code>myblog.category.update_time</code>.
     */
    @Column(name = "update_time")
    @Override
    public LocalDateTime getUpdateTime() {
        return this.updateTime;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Category other = (Category) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.pid == null) {
            if (other.pid != null)
                return false;
        }
        else if (!this.pid.equals(other.pid))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.createBy == null) {
            if (other.createBy != null)
                return false;
        }
        else if (!this.createBy.equals(other.createBy))
            return false;
        if (this.createTime == null) {
            if (other.createTime != null)
                return false;
        }
        else if (!this.createTime.equals(other.createTime))
            return false;
        if (this.updateBy == null) {
            if (other.updateBy != null)
                return false;
        }
        else if (!this.updateBy.equals(other.updateBy))
            return false;
        if (this.updateTime == null) {
            if (other.updateTime != null)
                return false;
        }
        else if (!this.updateTime.equals(other.updateTime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.pid == null) ? 0 : this.pid.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.createBy == null) ? 0 : this.createBy.hashCode());
        result = prime * result + ((this.createTime == null) ? 0 : this.createTime.hashCode());
        result = prime * result + ((this.updateBy == null) ? 0 : this.updateBy.hashCode());
        result = prime * result + ((this.updateTime == null) ? 0 : this.updateTime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Category (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(pid);
        sb.append(", ").append(description);
        sb.append(", ").append(status);
        sb.append(", ").append(createBy);
        sb.append(", ").append(createTime);
        sb.append(", ").append(updateBy);
        sb.append(", ").append(updateTime);

        sb.append(")");
        return sb.toString();
    }
}
