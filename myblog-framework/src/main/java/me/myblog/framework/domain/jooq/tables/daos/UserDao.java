/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import me.myblog.framework.domain.jooq.tables.User;
import me.myblog.framework.domain.jooq.tables.records.UserRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 用户表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserDao extends DAOImpl<UserRecord, me.myblog.framework.domain.jooq.tables.pojos.User, Long> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(User.USER, me.myblog.framework.domain.jooq.tables.pojos.User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    public UserDao(Configuration configuration) {
        super(User.USER, me.myblog.framework.domain.jooq.tables.pojos.User.class, configuration);
    }

    @Override
    public Long getId(me.myblog.framework.domain.jooq.tables.pojos.User object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(User.USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchById(Long... values) {
        return fetch(User.USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public me.myblog.framework.domain.jooq.tables.pojos.User fetchOneById(Long value) {
        return fetchOne(User.USER.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<me.myblog.framework.domain.jooq.tables.pojos.User> fetchOptionalById(Long value) {
        return fetchOptional(User.USER.ID, value);
    }

    /**
     * Fetch records that have <code>user_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfUserName(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.USER_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_name IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchByUserName(String... values) {
        return fetch(User.USER.USER_NAME, values);
    }

    /**
     * Fetch records that have <code>nick_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfNickName(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.NICK_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>nick_name IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchByNickName(String... values) {
        return fetch(User.USER.NICK_NAME, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchByPassword(String... values) {
        return fetch(User.USER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchByType(String... values) {
        return fetch(User.USER.TYPE, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchByStatus(String... values) {
        return fetch(User.USER.STATUS, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchByEmail(String... values) {
        return fetch(User.USER.EMAIL, values);
    }

    /**
     * Fetch records that have <code>phonenumber BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfPhonenumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.PHONENUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phonenumber IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchByPhonenumber(String... values) {
        return fetch(User.USER.PHONENUMBER, values);
    }

    /**
     * Fetch records that have <code>sex BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfSex(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.SEX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sex IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchBySex(String... values) {
        return fetch(User.USER.SEX, values);
    }

    /**
     * Fetch records that have <code>avatar BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfAvatar(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.AVATAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>avatar IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchByAvatar(String... values) {
        return fetch(User.USER.AVATAR, values);
    }

    /**
     * Fetch records that have <code>create_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfCreateBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(User.USER.CREATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_by IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchByCreateBy(Long... values) {
        return fetch(User.USER.CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchByCreateTime(LocalDateTime... values) {
        return fetch(User.USER.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfUpdateBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(User.USER.UPDATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_by IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchByUpdateBy(Long... values) {
        return fetch(User.USER.UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.User> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(User.USER.UPDATE_TIME, values);
    }
}
