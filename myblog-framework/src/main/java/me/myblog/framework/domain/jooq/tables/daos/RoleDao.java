/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import me.myblog.framework.domain.jooq.tables.Role;
import me.myblog.framework.domain.jooq.tables.records.RoleRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * 角色信息表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class RoleDao extends DAOImpl<RoleRecord, me.myblog.framework.domain.jooq.tables.pojos.Role, Long> {

    /**
     * Create a new RoleDao without any configuration
     */
    public RoleDao() {
        super(Role.ROLE, me.myblog.framework.domain.jooq.tables.pojos.Role.class);
    }

    /**
     * Create a new RoleDao with an attached configuration
     */
    @Autowired
    public RoleDao(Configuration configuration) {
        super(Role.ROLE, me.myblog.framework.domain.jooq.tables.pojos.Role.class, configuration);
    }

    @Override
    public Long getId(me.myblog.framework.domain.jooq.tables.pojos.Role object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Role.ROLE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchById(Long... values) {
        return fetch(Role.ROLE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public me.myblog.framework.domain.jooq.tables.pojos.Role fetchOneById(Long value) {
        return fetchOne(Role.ROLE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchOptionalById(Long value) {
        return fetchOptional(Role.ROLE.ID, value);
    }

    /**
     * Fetch records that have <code>role_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchRangeOfRoleName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Role.ROLE.ROLE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_name IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchByRoleName(String... values) {
        return fetch(Role.ROLE.ROLE_NAME, values);
    }

    /**
     * Fetch records that have <code>role_key BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchRangeOfRoleKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(Role.ROLE.ROLE_KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_key IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchByRoleKey(String... values) {
        return fetch(Role.ROLE.ROLE_KEY, values);
    }

    /**
     * Fetch records that have <code>role_sort BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchRangeOfRoleSort(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Role.ROLE.ROLE_SORT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_sort IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchByRoleSort(Integer... values) {
        return fetch(Role.ROLE.ROLE_SORT, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Role.ROLE.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchByStatus(String... values) {
        return fetch(Role.ROLE.STATUS, values);
    }

    /**
     * Fetch records that have <code>create_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchRangeOfCreateBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Role.ROLE.CREATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_by IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchByCreateBy(Long... values) {
        return fetch(Role.ROLE.CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Role.ROLE.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchByCreateTime(LocalDateTime... values) {
        return fetch(Role.ROLE.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchRangeOfUpdateBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Role.ROLE.UPDATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_by IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchByUpdateBy(Long... values) {
        return fetch(Role.ROLE.UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Role.ROLE.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(Role.ROLE.UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>remark BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchRangeOfRemark(String lowerInclusive, String upperInclusive) {
        return fetchRange(Role.ROLE.REMARK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>remark IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Role> fetchByRemark(String... values) {
        return fetch(Role.ROLE.REMARK, values);
    }
}
