/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq;


import me.myblog.framework.domain.jooq.tables.Article;
import me.myblog.framework.domain.jooq.tables.ArticleTag;
import me.myblog.framework.domain.jooq.tables.Category;
import me.myblog.framework.domain.jooq.tables.Comment;
import me.myblog.framework.domain.jooq.tables.Link;
import me.myblog.framework.domain.jooq.tables.Menu;
import me.myblog.framework.domain.jooq.tables.Role;
import me.myblog.framework.domain.jooq.tables.Tag;
import me.myblog.framework.domain.jooq.tables.User;
import me.myblog.framework.domain.jooq.tables.UserRole;
import me.myblog.framework.domain.jooq.tables.records.ArticleRecord;
import me.myblog.framework.domain.jooq.tables.records.ArticleTagRecord;
import me.myblog.framework.domain.jooq.tables.records.CategoryRecord;
import me.myblog.framework.domain.jooq.tables.records.CommentRecord;
import me.myblog.framework.domain.jooq.tables.records.LinkRecord;
import me.myblog.framework.domain.jooq.tables.records.MenuRecord;
import me.myblog.framework.domain.jooq.tables.records.RoleRecord;
import me.myblog.framework.domain.jooq.tables.records.TagRecord;
import me.myblog.framework.domain.jooq.tables.records.UserRecord;
import me.myblog.framework.domain.jooq.tables.records.UserRoleRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * myblog.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ArticleRecord> KEY_ARTICLE_PRIMARY = Internal.createUniqueKey(Article.ARTICLE, DSL.name("KEY_article_PRIMARY"), new TableField[] { Article.ARTICLE.ID }, true);
    public static final UniqueKey<ArticleTagRecord> KEY_ARTICLE_TAG_PRIMARY = Internal.createUniqueKey(ArticleTag.ARTICLE_TAG, DSL.name("KEY_article_tag_PRIMARY"), new TableField[] { ArticleTag.ARTICLE_TAG.ARTICLE_ID, ArticleTag.ARTICLE_TAG.TAG_ID }, true);
    public static final UniqueKey<CategoryRecord> KEY_CATEGORY_PRIMARY = Internal.createUniqueKey(Category.CATEGORY, DSL.name("KEY_category_PRIMARY"), new TableField[] { Category.CATEGORY.ID }, true);
    public static final UniqueKey<CommentRecord> KEY_COMMENT_PRIMARY = Internal.createUniqueKey(Comment.COMMENT, DSL.name("KEY_comment_PRIMARY"), new TableField[] { Comment.COMMENT.ID }, true);
    public static final UniqueKey<LinkRecord> KEY_LINK_PRIMARY = Internal.createUniqueKey(Link.LINK, DSL.name("KEY_link_PRIMARY"), new TableField[] { Link.LINK.ID }, true);
    public static final UniqueKey<MenuRecord> KEY_MENU_PRIMARY = Internal.createUniqueKey(Menu.MENU, DSL.name("KEY_menu_PRIMARY"), new TableField[] { Menu.MENU.ID }, true);
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = Internal.createUniqueKey(Role.ROLE, DSL.name("KEY_role_PRIMARY"), new TableField[] { Role.ROLE.ID }, true);
    public static final UniqueKey<TagRecord> KEY_TAG_PRIMARY = Internal.createUniqueKey(Tag.TAG, DSL.name("KEY_tag_PRIMARY"), new TableField[] { Tag.TAG.ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), new TableField[] { User.USER.ID }, true);
    public static final UniqueKey<UserRoleRecord> KEY_USER_ROLE_PRIMARY = Internal.createUniqueKey(UserRole.USER_ROLE, DSL.name("KEY_user_role_PRIMARY"), new TableField[] { UserRole.USER_ROLE.USER_ID, UserRole.USER_ROLE.ROLE_ID }, true);
}
