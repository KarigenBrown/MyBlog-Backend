/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import me.myblog.framework.domain.jooq.tables.Link;
import me.myblog.framework.domain.jooq.tables.records.LinkRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * 友链
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class LinkDao extends DAOImpl<LinkRecord, me.myblog.framework.domain.jooq.tables.pojos.Link, Long> {

    /**
     * Create a new LinkDao without any configuration
     */
    public LinkDao() {
        super(Link.LINK, me.myblog.framework.domain.jooq.tables.pojos.Link.class);
    }

    /**
     * Create a new LinkDao with an attached configuration
     */
    @Autowired
    public LinkDao(Configuration configuration) {
        super(Link.LINK, me.myblog.framework.domain.jooq.tables.pojos.Link.class, configuration);
    }

    @Override
    public Long getId(me.myblog.framework.domain.jooq.tables.pojos.Link object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Link.LINK.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchById(Long... values) {
        return fetch(Link.LINK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public me.myblog.framework.domain.jooq.tables.pojos.Link fetchOneById(Long value) {
        return fetchOne(Link.LINK.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchOptionalById(Long value) {
        return fetchOptional(Link.LINK.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Link.LINK.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchByName(String... values) {
        return fetch(Link.LINK.NAME, values);
    }

    /**
     * Fetch records that have <code>logo BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchRangeOfLogo(String lowerInclusive, String upperInclusive) {
        return fetchRange(Link.LINK.LOGO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>logo IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchByLogo(String... values) {
        return fetch(Link.LINK.LOGO, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Link.LINK.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchByDescription(String... values) {
        return fetch(Link.LINK.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchRangeOfAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(Link.LINK.ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchByAddress(String... values) {
        return fetch(Link.LINK.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Link.LINK.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchByStatus(String... values) {
        return fetch(Link.LINK.STATUS, values);
    }

    /**
     * Fetch records that have <code>create_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchRangeOfCreateBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Link.LINK.CREATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_by IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchByCreateBy(Long... values) {
        return fetch(Link.LINK.CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Link.LINK.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchByCreateTime(LocalDateTime... values) {
        return fetch(Link.LINK.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchRangeOfUpdateBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Link.LINK.UPDATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_by IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchByUpdateBy(Long... values) {
        return fetch(Link.LINK.UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Link.LINK.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Link> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(Link.LINK.UPDATE_TIME, values);
    }
}
