/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.records;


import java.time.LocalDateTime;

import me.myblog.framework.domain.jooq.tables.Role;
import me.myblog.framework.domain.jooq.tables.interfaces.IRole;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 角色信息表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RoleRecord extends UpdatableRecordImpl<RoleRecord> implements Record10<Long, String, String, Integer, String, Long, LocalDateTime, Long, LocalDateTime, String>, IRole {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>myblog.role.id</code>. 角色ID
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>myblog.role.id</code>. 角色ID
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>myblog.role.role_name</code>. 角色名称
     */
    @Override
    public void setRoleName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>myblog.role.role_name</code>. 角色名称
     */
    @Override
    public String getRoleName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>myblog.role.role_key</code>. 角色权限字符串
     */
    @Override
    public void setRoleKey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>myblog.role.role_key</code>. 角色权限字符串
     */
    @Override
    public String getRoleKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>myblog.role.role_sort</code>. 显示顺序
     */
    @Override
    public void setRoleSort(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>myblog.role.role_sort</code>. 显示顺序
     */
    @Override
    public Integer getRoleSort() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>myblog.role.status</code>. 角色状态（0正常，1停用）
     */
    @Override
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>myblog.role.status</code>. 角色状态（0正常，1停用）
     */
    @Override
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>myblog.role.create_by</code>. 创建者
     */
    @Override
    public void setCreateBy(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>myblog.role.create_by</code>. 创建者
     */
    @Override
    public Long getCreateBy() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>myblog.role.create_time</code>. 创建时间
     */
    @Override
    public void setCreateTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>myblog.role.create_time</code>. 创建时间
     */
    @Override
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>myblog.role.update_by</code>. 更新者
     */
    @Override
    public void setUpdateBy(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>myblog.role.update_by</code>. 更新者
     */
    @Override
    public Long getUpdateBy() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>myblog.role.update_time</code>. 更新时间
     */
    @Override
    public void setUpdateTime(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>myblog.role.update_time</code>. 更新时间
     */
    @Override
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>myblog.role.remark</code>. 备注
     */
    @Override
    public void setRemark(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>myblog.role.remark</code>. 备注
     */
    @Override
    public String getRemark() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, String, String, Integer, String, Long, LocalDateTime, Long, LocalDateTime, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, String, String, Integer, String, Long, LocalDateTime, Long, LocalDateTime, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Role.ROLE.ID;
    }

    @Override
    public Field<String> field2() {
        return Role.ROLE.ROLE_NAME;
    }

    @Override
    public Field<String> field3() {
        return Role.ROLE.ROLE_KEY;
    }

    @Override
    public Field<Integer> field4() {
        return Role.ROLE.ROLE_SORT;
    }

    @Override
    public Field<String> field5() {
        return Role.ROLE.STATUS;
    }

    @Override
    public Field<Long> field6() {
        return Role.ROLE.CREATE_BY;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Role.ROLE.CREATE_TIME;
    }

    @Override
    public Field<Long> field8() {
        return Role.ROLE.UPDATE_BY;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return Role.ROLE.UPDATE_TIME;
    }

    @Override
    public Field<String> field10() {
        return Role.ROLE.REMARK;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRoleName();
    }

    @Override
    public String component3() {
        return getRoleKey();
    }

    @Override
    public Integer component4() {
        return getRoleSort();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public Long component6() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime component7() {
        return getCreateTime();
    }

    @Override
    public Long component8() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime component9() {
        return getUpdateTime();
    }

    @Override
    public String component10() {
        return getRemark();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRoleName();
    }

    @Override
    public String value3() {
        return getRoleKey();
    }

    @Override
    public Integer value4() {
        return getRoleSort();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public Long value6() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime value7() {
        return getCreateTime();
    }

    @Override
    public Long value8() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime value9() {
        return getUpdateTime();
    }

    @Override
    public String value10() {
        return getRemark();
    }

    @Override
    public RoleRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RoleRecord value2(String value) {
        setRoleName(value);
        return this;
    }

    @Override
    public RoleRecord value3(String value) {
        setRoleKey(value);
        return this;
    }

    @Override
    public RoleRecord value4(Integer value) {
        setRoleSort(value);
        return this;
    }

    @Override
    public RoleRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public RoleRecord value6(Long value) {
        setCreateBy(value);
        return this;
    }

    @Override
    public RoleRecord value7(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public RoleRecord value8(Long value) {
        setUpdateBy(value);
        return this;
    }

    @Override
    public RoleRecord value9(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public RoleRecord value10(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public RoleRecord values(Long value1, String value2, String value3, Integer value4, String value5, Long value6, LocalDateTime value7, Long value8, LocalDateTime value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRole from) {
        setId(from.getId());
        setRoleName(from.getRoleName());
        setRoleKey(from.getRoleKey());
        setRoleSort(from.getRoleSort());
        setStatus(from.getStatus());
        setCreateBy(from.getCreateBy());
        setCreateTime(from.getCreateTime());
        setUpdateBy(from.getUpdateBy());
        setUpdateTime(from.getUpdateTime());
        setRemark(from.getRemark());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IRole> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleRecord
     */
    public RoleRecord() {
        super(Role.ROLE);
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(Long id, String roleName, String roleKey, Integer roleSort, String status, Long createBy, LocalDateTime createTime, Long updateBy, LocalDateTime updateTime, String remark) {
        super(Role.ROLE);

        setId(id);
        setRoleName(roleName);
        setRoleKey(roleKey);
        setRoleSort(roleSort);
        setStatus(status);
        setCreateBy(createBy);
        setCreateTime(createTime);
        setUpdateBy(updateBy);
        setUpdateTime(updateTime);
        setRemark(remark);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(me.myblog.framework.domain.jooq.tables.pojos.Role value) {
        super(Role.ROLE);

        if (value != null) {
            setId(value.getId());
            setRoleName(value.getRoleName());
            setRoleKey(value.getRoleKey());
            setRoleSort(value.getRoleSort());
            setStatus(value.getStatus());
            setCreateBy(value.getCreateBy());
            setCreateTime(value.getCreateTime());
            setUpdateBy(value.getUpdateBy());
            setUpdateTime(value.getUpdateTime());
            setRemark(value.getRemark());
            resetChangedOnNotNull();
        }
    }
}
