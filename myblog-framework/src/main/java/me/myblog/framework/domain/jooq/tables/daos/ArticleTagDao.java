/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.daos;


import java.util.List;

import me.myblog.framework.domain.jooq.tables.ArticleTag;
import me.myblog.framework.domain.jooq.tables.records.ArticleTagRecord;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * 文章标签关联表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ArticleTagDao extends DAOImpl<ArticleTagRecord, me.myblog.framework.domain.jooq.tables.pojos.ArticleTag, Record2<Long, Long>> {

    /**
     * Create a new ArticleTagDao without any configuration
     */
    public ArticleTagDao() {
        super(ArticleTag.ARTICLE_TAG, me.myblog.framework.domain.jooq.tables.pojos.ArticleTag.class);
    }

    /**
     * Create a new ArticleTagDao with an attached configuration
     */
    public ArticleTagDao(Configuration configuration) {
        super(ArticleTag.ARTICLE_TAG, me.myblog.framework.domain.jooq.tables.pojos.ArticleTag.class, configuration);
    }

    @Override
    public Record2<Long, Long> getId(me.myblog.framework.domain.jooq.tables.pojos.ArticleTag object) {
        return compositeKeyRecord(object.getArticleId(), object.getTagId());
    }

    /**
     * Fetch records that have <code>article_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.ArticleTag> fetchRangeOfArticleId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ArticleTag.ARTICLE_TAG.ARTICLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>article_id IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.ArticleTag> fetchByArticleId(Long... values) {
        return fetch(ArticleTag.ARTICLE_TAG.ARTICLE_ID, values);
    }

    /**
     * Fetch records that have <code>tag_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.ArticleTag> fetchRangeOfTagId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ArticleTag.ARTICLE_TAG.TAG_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tag_id IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.ArticleTag> fetchByTagId(Long... values) {
        return fetch(ArticleTag.ARTICLE_TAG.TAG_ID, values);
    }
}
