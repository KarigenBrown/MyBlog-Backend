/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.records;


import java.time.LocalDateTime;

import me.myblog.framework.domain.jooq.tables.Menu;
import me.myblog.framework.domain.jooq.tables.interfaces.IMenu;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 菜单权限表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MenuRecord extends UpdatableRecordImpl<MenuRecord> implements Record17<Long, String, Long, Integer, String, String, Integer, String, String, String, String, String, Long, LocalDateTime, Long, LocalDateTime, String>, IMenu {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>myblog.menu.id</code>. 菜单ID
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>myblog.menu.id</code>. 菜单ID
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>myblog.menu.menu_name</code>. 菜单名称
     */
    @Override
    public void setMenuName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>myblog.menu.menu_name</code>. 菜单名称
     */
    @Override
    public String getMenuName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>myblog.menu.parent_id</code>. 父菜单ID
     */
    @Override
    public void setParentId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>myblog.menu.parent_id</code>. 父菜单ID
     */
    @Override
    public Long getParentId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>myblog.menu.order_num</code>. 显示顺序
     */
    @Override
    public void setOrderNum(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>myblog.menu.order_num</code>. 显示顺序
     */
    @Override
    public Integer getOrderNum() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>myblog.menu.path</code>. 路由地址
     */
    @Override
    public void setPath(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>myblog.menu.path</code>. 路由地址
     */
    @Override
    public String getPath() {
        return (String) get(4);
    }

    /**
     * Setter for <code>myblog.menu.component</code>. 组件路径
     */
    @Override
    public void setComponent(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>myblog.menu.component</code>. 组件路径
     */
    @Override
    public String getComponent() {
        return (String) get(5);
    }

    /**
     * Setter for <code>myblog.menu.is_frame</code>. 是否为外链（0是，1否）
     */
    @Override
    public void setIsFrame(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>myblog.menu.is_frame</code>. 是否为外链（0是，1否）
     */
    @Override
    public Integer getIsFrame() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>myblog.menu.menu_type</code>. 菜单类型（M目录，C菜单，F按钮）
     */
    @Override
    public void setMenuType(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>myblog.menu.menu_type</code>. 菜单类型（M目录，C菜单，F按钮）
     */
    @Override
    public String getMenuType() {
        return (String) get(7);
    }

    /**
     * Setter for <code>myblog.menu.visible</code>. 菜单状态（0显示，1隐藏）
     */
    @Override
    public void setVisible(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>myblog.menu.visible</code>. 菜单状态（0显示，1隐藏）
     */
    @Override
    public String getVisible() {
        return (String) get(8);
    }

    /**
     * Setter for <code>myblog.menu.status</code>. 菜单状态（0正常，1停用）
     */
    @Override
    public void setStatus(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>myblog.menu.status</code>. 菜单状态（0正常，1停用）
     */
    @Override
    public String getStatus() {
        return (String) get(9);
    }

    /**
     * Setter for <code>myblog.menu.perms</code>. 权限标识
     */
    @Override
    public void setPerms(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>myblog.menu.perms</code>. 权限标识
     */
    @Override
    public String getPerms() {
        return (String) get(10);
    }

    /**
     * Setter for <code>myblog.menu.icon</code>. 菜单图标
     */
    @Override
    public void setIcon(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>myblog.menu.icon</code>. 菜单图标
     */
    @Override
    public String getIcon() {
        return (String) get(11);
    }

    /**
     * Setter for <code>myblog.menu.create_by</code>. 创建者
     */
    @Override
    public void setCreateBy(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>myblog.menu.create_by</code>. 创建者
     */
    @Override
    public Long getCreateBy() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>myblog.menu.create_time</code>. 创建时间
     */
    @Override
    public void setCreateTime(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>myblog.menu.create_time</code>. 创建时间
     */
    @Override
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>myblog.menu.update_by</code>. 更新者
     */
    @Override
    public void setUpdateBy(Long value) {
        set(14, value);
    }

    /**
     * Getter for <code>myblog.menu.update_by</code>. 更新者
     */
    @Override
    public Long getUpdateBy() {
        return (Long) get(14);
    }

    /**
     * Setter for <code>myblog.menu.update_time</code>. 更新时间
     */
    @Override
    public void setUpdateTime(LocalDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>myblog.menu.update_time</code>. 更新时间
     */
    @Override
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>myblog.menu.remark</code>. 备注
     */
    @Override
    public void setRemark(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>myblog.menu.remark</code>. 备注
     */
    @Override
    public String getRemark() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<Long, String, Long, Integer, String, String, Integer, String, String, String, String, String, Long, LocalDateTime, Long, LocalDateTime, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<Long, String, Long, Integer, String, String, Integer, String, String, String, String, String, Long, LocalDateTime, Long, LocalDateTime, String> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Menu.MENU.ID;
    }

    @Override
    public Field<String> field2() {
        return Menu.MENU.MENU_NAME;
    }

    @Override
    public Field<Long> field3() {
        return Menu.MENU.PARENT_ID;
    }

    @Override
    public Field<Integer> field4() {
        return Menu.MENU.ORDER_NUM;
    }

    @Override
    public Field<String> field5() {
        return Menu.MENU.PATH;
    }

    @Override
    public Field<String> field6() {
        return Menu.MENU.COMPONENT;
    }

    @Override
    public Field<Integer> field7() {
        return Menu.MENU.IS_FRAME;
    }

    @Override
    public Field<String> field8() {
        return Menu.MENU.MENU_TYPE;
    }

    @Override
    public Field<String> field9() {
        return Menu.MENU.VISIBLE;
    }

    @Override
    public Field<String> field10() {
        return Menu.MENU.STATUS;
    }

    @Override
    public Field<String> field11() {
        return Menu.MENU.PERMS;
    }

    @Override
    public Field<String> field12() {
        return Menu.MENU.ICON;
    }

    @Override
    public Field<Long> field13() {
        return Menu.MENU.CREATE_BY;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return Menu.MENU.CREATE_TIME;
    }

    @Override
    public Field<Long> field15() {
        return Menu.MENU.UPDATE_BY;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return Menu.MENU.UPDATE_TIME;
    }

    @Override
    public Field<String> field17() {
        return Menu.MENU.REMARK;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getMenuName();
    }

    @Override
    public Long component3() {
        return getParentId();
    }

    @Override
    public Integer component4() {
        return getOrderNum();
    }

    @Override
    public String component5() {
        return getPath();
    }

    @Override
    public String component6() {
        return getComponent();
    }

    @Override
    public Integer component7() {
        return getIsFrame();
    }

    @Override
    public String component8() {
        return getMenuType();
    }

    @Override
    public String component9() {
        return getVisible();
    }

    @Override
    public String component10() {
        return getStatus();
    }

    @Override
    public String component11() {
        return getPerms();
    }

    @Override
    public String component12() {
        return getIcon();
    }

    @Override
    public Long component13() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime component14() {
        return getCreateTime();
    }

    @Override
    public Long component15() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime component16() {
        return getUpdateTime();
    }

    @Override
    public String component17() {
        return getRemark();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getMenuName();
    }

    @Override
    public Long value3() {
        return getParentId();
    }

    @Override
    public Integer value4() {
        return getOrderNum();
    }

    @Override
    public String value5() {
        return getPath();
    }

    @Override
    public String value6() {
        return getComponent();
    }

    @Override
    public Integer value7() {
        return getIsFrame();
    }

    @Override
    public String value8() {
        return getMenuType();
    }

    @Override
    public String value9() {
        return getVisible();
    }

    @Override
    public String value10() {
        return getStatus();
    }

    @Override
    public String value11() {
        return getPerms();
    }

    @Override
    public String value12() {
        return getIcon();
    }

    @Override
    public Long value13() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime value14() {
        return getCreateTime();
    }

    @Override
    public Long value15() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime value16() {
        return getUpdateTime();
    }

    @Override
    public String value17() {
        return getRemark();
    }

    @Override
    public MenuRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MenuRecord value2(String value) {
        setMenuName(value);
        return this;
    }

    @Override
    public MenuRecord value3(Long value) {
        setParentId(value);
        return this;
    }

    @Override
    public MenuRecord value4(Integer value) {
        setOrderNum(value);
        return this;
    }

    @Override
    public MenuRecord value5(String value) {
        setPath(value);
        return this;
    }

    @Override
    public MenuRecord value6(String value) {
        setComponent(value);
        return this;
    }

    @Override
    public MenuRecord value7(Integer value) {
        setIsFrame(value);
        return this;
    }

    @Override
    public MenuRecord value8(String value) {
        setMenuType(value);
        return this;
    }

    @Override
    public MenuRecord value9(String value) {
        setVisible(value);
        return this;
    }

    @Override
    public MenuRecord value10(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public MenuRecord value11(String value) {
        setPerms(value);
        return this;
    }

    @Override
    public MenuRecord value12(String value) {
        setIcon(value);
        return this;
    }

    @Override
    public MenuRecord value13(Long value) {
        setCreateBy(value);
        return this;
    }

    @Override
    public MenuRecord value14(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public MenuRecord value15(Long value) {
        setUpdateBy(value);
        return this;
    }

    @Override
    public MenuRecord value16(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public MenuRecord value17(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public MenuRecord values(Long value1, String value2, Long value3, Integer value4, String value5, String value6, Integer value7, String value8, String value9, String value10, String value11, String value12, Long value13, LocalDateTime value14, Long value15, LocalDateTime value16, String value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IMenu from) {
        setId(from.getId());
        setMenuName(from.getMenuName());
        setParentId(from.getParentId());
        setOrderNum(from.getOrderNum());
        setPath(from.getPath());
        setComponent(from.getComponent());
        setIsFrame(from.getIsFrame());
        setMenuType(from.getMenuType());
        setVisible(from.getVisible());
        setStatus(from.getStatus());
        setPerms(from.getPerms());
        setIcon(from.getIcon());
        setCreateBy(from.getCreateBy());
        setCreateTime(from.getCreateTime());
        setUpdateBy(from.getUpdateBy());
        setUpdateTime(from.getUpdateTime());
        setRemark(from.getRemark());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IMenu> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MenuRecord
     */
    public MenuRecord() {
        super(Menu.MENU);
    }

    /**
     * Create a detached, initialised MenuRecord
     */
    public MenuRecord(Long id, String menuName, Long parentId, Integer orderNum, String path, String component, Integer isFrame, String menuType, String visible, String status, String perms, String icon, Long createBy, LocalDateTime createTime, Long updateBy, LocalDateTime updateTime, String remark) {
        super(Menu.MENU);

        setId(id);
        setMenuName(menuName);
        setParentId(parentId);
        setOrderNum(orderNum);
        setPath(path);
        setComponent(component);
        setIsFrame(isFrame);
        setMenuType(menuType);
        setVisible(visible);
        setStatus(status);
        setPerms(perms);
        setIcon(icon);
        setCreateBy(createBy);
        setCreateTime(createTime);
        setUpdateBy(updateBy);
        setUpdateTime(updateTime);
        setRemark(remark);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MenuRecord
     */
    public MenuRecord(me.myblog.framework.domain.jooq.tables.pojos.Menu value) {
        super(Menu.MENU);

        if (value != null) {
            setId(value.getId());
            setMenuName(value.getMenuName());
            setParentId(value.getParentId());
            setOrderNum(value.getOrderNum());
            setPath(value.getPath());
            setComponent(value.getComponent());
            setIsFrame(value.getIsFrame());
            setMenuType(value.getMenuType());
            setVisible(value.getVisible());
            setStatus(value.getStatus());
            setPerms(value.getPerms());
            setIcon(value.getIcon());
            setCreateBy(value.getCreateBy());
            setCreateTime(value.getCreateTime());
            setUpdateBy(value.getUpdateBy());
            setUpdateTime(value.getUpdateTime());
            setRemark(value.getRemark());
            resetChangedOnNotNull();
        }
    }
}
