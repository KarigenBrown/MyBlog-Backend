/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.interfaces;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * 用户表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "user",
    schema = "myblog"
)
public interface IUser extends Serializable {

    /**
     * Getter for <code>myblog.user.id</code>. 主键
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    public Long getId();

    /**
     * Getter for <code>myblog.user.user_name</code>. 用户名
     */
    @Column(name = "user_name", length = 64)
    @Size(max = 64)
    public String getUserName();

    /**
     * Getter for <code>myblog.user.nick_name</code>. 昵称
     */
    @Column(name = "nick_name", length = 64)
    @Size(max = 64)
    public String getNickName();

    /**
     * Getter for <code>myblog.user.password</code>. 密码
     */
    @Column(name = "password", length = 64)
    @Size(max = 64)
    public String getPassword();

    /**
     * Getter for <code>myblog.user.type</code>. 用户类型（0代表普通用户，1代表管理员）
     */
    @Column(name = "type", length = 1)
    @Size(max = 1)
    public String getType();

    /**
     * Getter for <code>myblog.user.status</code>. 账号状态（0正常，1停用）
     */
    @Column(name = "status", length = 1)
    @Size(max = 1)
    public String getStatus();

    /**
     * Getter for <code>myblog.user.email</code>. 邮箱
     */
    @Column(name = "email", length = 64)
    @Size(max = 64)
    public String getEmail();

    /**
     * Getter for <code>myblog.user.phonenumber</code>. 手机号
     */
    @Column(name = "phonenumber", length = 32)
    @Size(max = 32)
    public String getPhonenumber();

    /**
     * Getter for <code>myblog.user.sex</code>. 用户性别（0男，1女，2未知）
     */
    @Column(name = "sex", length = 1)
    @Size(max = 1)
    public String getSex();

    /**
     * Getter for <code>myblog.user.avatar</code>. 头像
     */
    @Column(name = "avatar", length = 128)
    @Size(max = 128)
    public String getAvatar();

    /**
     * Getter for <code>myblog.user.create_by</code>. 创建人的用户id
     */
    @Column(name = "create_by")
    public Long getCreateBy();

    /**
     * Getter for <code>myblog.user.create_time</code>. 创建时间
     */
    @Column(name = "create_time")
    public LocalDateTime getCreateTime();

    /**
     * Getter for <code>myblog.user.update_by</code>. 更新人
     */
    @Column(name = "update_by")
    public Long getUpdateBy();

    /**
     * Getter for <code>myblog.user.update_time</code>. 更新时间
     */
    @Column(name = "update_time")
    public LocalDateTime getUpdateTime();
}
