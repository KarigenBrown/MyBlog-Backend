/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import me.myblog.framework.domain.jooq.tables.Article;
import me.myblog.framework.domain.jooq.tables.records.ArticleRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 文章表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ArticleDao extends DAOImpl<ArticleRecord, me.myblog.framework.domain.jooq.tables.pojos.Article, Long> {

    /**
     * Create a new ArticleDao without any configuration
     */
    public ArticleDao() {
        super(Article.ARTICLE, me.myblog.framework.domain.jooq.tables.pojos.Article.class);
    }

    /**
     * Create a new ArticleDao with an attached configuration
     */
    public ArticleDao(Configuration configuration) {
        super(Article.ARTICLE, me.myblog.framework.domain.jooq.tables.pojos.Article.class, configuration);
    }

    @Override
    public Long getId(me.myblog.framework.domain.jooq.tables.pojos.Article object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Article.ARTICLE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchById(Long... values) {
        return fetch(Article.ARTICLE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public me.myblog.framework.domain.jooq.tables.pojos.Article fetchOneById(Long value) {
        return fetchOne(Article.ARTICLE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchOptionalById(Long value) {
        return fetchOptional(Article.ARTICLE.ID, value);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(Article.ARTICLE.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchByTitle(String... values) {
        return fetch(Article.ARTICLE.TITLE, values);
    }

    /**
     * Fetch records that have <code>content BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfContent(String lowerInclusive, String upperInclusive) {
        return fetchRange(Article.ARTICLE.CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchByContent(String... values) {
        return fetch(Article.ARTICLE.CONTENT, values);
    }

    /**
     * Fetch records that have <code>summary BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfSummary(String lowerInclusive, String upperInclusive) {
        return fetchRange(Article.ARTICLE.SUMMARY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>summary IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchBySummary(String... values) {
        return fetch(Article.ARTICLE.SUMMARY, values);
    }

    /**
     * Fetch records that have <code>category_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfCategoryId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Article.ARTICLE.CATEGORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category_id IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchByCategoryId(Long... values) {
        return fetch(Article.ARTICLE.CATEGORY_ID, values);
    }

    /**
     * Fetch records that have <code>thumbnail BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfThumbnail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Article.ARTICLE.THUMBNAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>thumbnail IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchByThumbnail(String... values) {
        return fetch(Article.ARTICLE.THUMBNAIL, values);
    }

    /**
     * Fetch records that have <code>is_top BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfIsTop(String lowerInclusive, String upperInclusive) {
        return fetchRange(Article.ARTICLE.IS_TOP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_top IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchByIsTop(String... values) {
        return fetch(Article.ARTICLE.IS_TOP, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Article.ARTICLE.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchByStatus(String... values) {
        return fetch(Article.ARTICLE.STATUS, values);
    }

    /**
     * Fetch records that have <code>view_count BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfViewCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Article.ARTICLE.VIEW_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>view_count IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchByViewCount(Long... values) {
        return fetch(Article.ARTICLE.VIEW_COUNT, values);
    }

    /**
     * Fetch records that have <code>is_comment BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfIsComment(String lowerInclusive, String upperInclusive) {
        return fetchRange(Article.ARTICLE.IS_COMMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_comment IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchByIsComment(String... values) {
        return fetch(Article.ARTICLE.IS_COMMENT, values);
    }

    /**
     * Fetch records that have <code>create_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfCreateBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Article.ARTICLE.CREATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_by IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchByCreateBy(Long... values) {
        return fetch(Article.ARTICLE.CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Article.ARTICLE.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchByCreateTime(LocalDateTime... values) {
        return fetch(Article.ARTICLE.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfUpdateBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Article.ARTICLE.UPDATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_by IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchByUpdateBy(Long... values) {
        return fetch(Article.ARTICLE.UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Article.ARTICLE.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Article> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(Article.ARTICLE.UPDATE_TIME, values);
    }
}
