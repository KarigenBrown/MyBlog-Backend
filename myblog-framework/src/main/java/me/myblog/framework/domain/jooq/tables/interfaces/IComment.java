/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.interfaces;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * 评论表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "comment",
    schema = "myblog"
)
public interface IComment extends Serializable {

    /**
     * Getter for <code>myblog.comment.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    public Long getId();

    /**
     * Getter for <code>myblog.comment.type</code>. 评论类型（0代表文章评论，1代表友链评论）
     */
    @Column(name = "type", length = 1)
    @Size(max = 1)
    public String getType();

    /**
     * Getter for <code>myblog.comment.article_id</code>. 文章id
     */
    @Column(name = "article_id")
    public Long getArticleId();

    /**
     * Getter for <code>myblog.comment.root_id</code>. 根评论id
     */
    @Column(name = "root_id")
    public Long getRootId();

    /**
     * Getter for <code>myblog.comment.content</code>. 评论内容
     */
    @Column(name = "content", length = 512)
    @Size(max = 512)
    public String getContent();

    /**
     * Getter for <code>myblog.comment.to_comment_user_id</code>.
     * 所回复的目标评论的userid
     */
    @Column(name = "to_comment_user_id")
    public Long getToCommentUserId();

    /**
     * Getter for <code>myblog.comment.to_comment_id</code>. 回复目标评论id
     */
    @Column(name = "to_comment_id")
    public Long getToCommentId();

    /**
     * Getter for <code>myblog.comment.create_by</code>.
     */
    @Column(name = "create_by")
    public Long getCreateBy();

    /**
     * Getter for <code>myblog.comment.create_time</code>.
     */
    @Column(name = "create_time")
    public LocalDateTime getCreateTime();

    /**
     * Getter for <code>myblog.comment.update_by</code>.
     */
    @Column(name = "update_by")
    public Long getUpdateBy();

    /**
     * Getter for <code>myblog.comment.update_time</code>.
     */
    @Column(name = "update_time")
    public LocalDateTime getUpdateTime();
}
