/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.records;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

import java.time.LocalDateTime;

import me.myblog.framework.domain.jooq.tables.Article;
import me.myblog.framework.domain.jooq.tables.interfaces.IArticle;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 文章表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "article",
    schema = "myblog"
)
public class ArticleRecord extends UpdatableRecordImpl<ArticleRecord> implements Record14<Long, String, String, String, Long, String, String, String, Long, String, Long, LocalDateTime, Long, LocalDateTime>, IArticle {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>myblog.article.id</code>.
     */
    public ArticleRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>myblog.article.title</code>. 标题
     */
    public ArticleRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.title</code>. 标题
     */
    @Column(name = "title", length = 256)
    @Size(max = 256)
    @Override
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>myblog.article.content</code>. 文章内容
     */
    public ArticleRecord setContent(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.content</code>. 文章内容
     */
    @Column(name = "content")
    @Override
    public String getContent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>myblog.article.summary</code>. 文章摘要
     */
    public ArticleRecord setSummary(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.summary</code>. 文章摘要
     */
    @Column(name = "summary", length = 1024)
    @Size(max = 1024)
    @Override
    public String getSummary() {
        return (String) get(3);
    }

    /**
     * Setter for <code>myblog.article.category_id</code>. 所属分类id
     */
    public ArticleRecord setCategoryId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.category_id</code>. 所属分类id
     */
    @Column(name = "category_id")
    @Override
    public Long getCategoryId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>myblog.article.thumbnail</code>. 缩略图
     */
    public ArticleRecord setThumbnail(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.thumbnail</code>. 缩略图
     */
    @Column(name = "thumbnail", length = 256)
    @Size(max = 256)
    @Override
    public String getThumbnail() {
        return (String) get(5);
    }

    /**
     * Setter for <code>myblog.article.is_top</code>. 是否置顶（0否，1是）
     */
    public ArticleRecord setIsTop(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.is_top</code>. 是否置顶（0否，1是）
     */
    @Column(name = "is_top", length = 1)
    @Size(max = 1)
    @Override
    public String getIsTop() {
        return (String) get(6);
    }

    /**
     * Setter for <code>myblog.article.status</code>. 状态（0已发布，1草稿）
     */
    public ArticleRecord setStatus(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.status</code>. 状态（0已发布，1草稿）
     */
    @Column(name = "status", length = 1)
    @Size(max = 1)
    @Override
    public String getStatus() {
        return (String) get(7);
    }

    /**
     * Setter for <code>myblog.article.view_count</code>. 访问量
     */
    public ArticleRecord setViewCount(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.view_count</code>. 访问量
     */
    @Column(name = "view_count")
    @Override
    public Long getViewCount() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>myblog.article.is_comment</code>. 是否允许评论（1是，0否）
     */
    public ArticleRecord setIsComment(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.is_comment</code>. 是否允许评论（1是，0否）
     */
    @Column(name = "is_comment", length = 1)
    @Size(max = 1)
    @Override
    public String getIsComment() {
        return (String) get(9);
    }

    /**
     * Setter for <code>myblog.article.create_by</code>.
     */
    public ArticleRecord setCreateBy(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.create_by</code>.
     */
    @Column(name = "create_by")
    @Override
    public Long getCreateBy() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>myblog.article.create_time</code>.
     */
    public ArticleRecord setCreateTime(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.create_time</code>.
     */
    @Column(name = "create_time")
    @Override
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>myblog.article.update_by</code>.
     */
    public ArticleRecord setUpdateBy(Long value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.update_by</code>.
     */
    @Column(name = "update_by")
    @Override
    public Long getUpdateBy() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>myblog.article.update_time</code>.
     */
    public ArticleRecord setUpdateTime(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>myblog.article.update_time</code>.
     */
    @Column(name = "update_time")
    @Override
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Long, String, String, String, Long, String, String, String, Long, String, Long, LocalDateTime, Long, LocalDateTime> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Long, String, String, String, Long, String, String, String, Long, String, Long, LocalDateTime, Long, LocalDateTime> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Article.ARTICLE.ID;
    }

    @Override
    public Field<String> field2() {
        return Article.ARTICLE.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Article.ARTICLE.CONTENT;
    }

    @Override
    public Field<String> field4() {
        return Article.ARTICLE.SUMMARY;
    }

    @Override
    public Field<Long> field5() {
        return Article.ARTICLE.CATEGORY_ID;
    }

    @Override
    public Field<String> field6() {
        return Article.ARTICLE.THUMBNAIL;
    }

    @Override
    public Field<String> field7() {
        return Article.ARTICLE.IS_TOP;
    }

    @Override
    public Field<String> field8() {
        return Article.ARTICLE.STATUS;
    }

    @Override
    public Field<Long> field9() {
        return Article.ARTICLE.VIEW_COUNT;
    }

    @Override
    public Field<String> field10() {
        return Article.ARTICLE.IS_COMMENT;
    }

    @Override
    public Field<Long> field11() {
        return Article.ARTICLE.CREATE_BY;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return Article.ARTICLE.CREATE_TIME;
    }

    @Override
    public Field<Long> field13() {
        return Article.ARTICLE.UPDATE_BY;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return Article.ARTICLE.UPDATE_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getContent();
    }

    @Override
    public String component4() {
        return getSummary();
    }

    @Override
    public Long component5() {
        return getCategoryId();
    }

    @Override
    public String component6() {
        return getThumbnail();
    }

    @Override
    public String component7() {
        return getIsTop();
    }

    @Override
    public String component8() {
        return getStatus();
    }

    @Override
    public Long component9() {
        return getViewCount();
    }

    @Override
    public String component10() {
        return getIsComment();
    }

    @Override
    public Long component11() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime component12() {
        return getCreateTime();
    }

    @Override
    public Long component13() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime component14() {
        return getUpdateTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getContent();
    }

    @Override
    public String value4() {
        return getSummary();
    }

    @Override
    public Long value5() {
        return getCategoryId();
    }

    @Override
    public String value6() {
        return getThumbnail();
    }

    @Override
    public String value7() {
        return getIsTop();
    }

    @Override
    public String value8() {
        return getStatus();
    }

    @Override
    public Long value9() {
        return getViewCount();
    }

    @Override
    public String value10() {
        return getIsComment();
    }

    @Override
    public Long value11() {
        return getCreateBy();
    }

    @Override
    public LocalDateTime value12() {
        return getCreateTime();
    }

    @Override
    public Long value13() {
        return getUpdateBy();
    }

    @Override
    public LocalDateTime value14() {
        return getUpdateTime();
    }

    @Override
    public ArticleRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ArticleRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public ArticleRecord value3(String value) {
        setContent(value);
        return this;
    }

    @Override
    public ArticleRecord value4(String value) {
        setSummary(value);
        return this;
    }

    @Override
    public ArticleRecord value5(Long value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public ArticleRecord value6(String value) {
        setThumbnail(value);
        return this;
    }

    @Override
    public ArticleRecord value7(String value) {
        setIsTop(value);
        return this;
    }

    @Override
    public ArticleRecord value8(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public ArticleRecord value9(Long value) {
        setViewCount(value);
        return this;
    }

    @Override
    public ArticleRecord value10(String value) {
        setIsComment(value);
        return this;
    }

    @Override
    public ArticleRecord value11(Long value) {
        setCreateBy(value);
        return this;
    }

    @Override
    public ArticleRecord value12(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public ArticleRecord value13(Long value) {
        setUpdateBy(value);
        return this;
    }

    @Override
    public ArticleRecord value14(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public ArticleRecord values(Long value1, String value2, String value3, String value4, Long value5, String value6, String value7, String value8, Long value9, String value10, Long value11, LocalDateTime value12, Long value13, LocalDateTime value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IArticle from) {
        setId(from.getId());
        setTitle(from.getTitle());
        setContent(from.getContent());
        setSummary(from.getSummary());
        setCategoryId(from.getCategoryId());
        setThumbnail(from.getThumbnail());
        setIsTop(from.getIsTop());
        setStatus(from.getStatus());
        setViewCount(from.getViewCount());
        setIsComment(from.getIsComment());
        setCreateBy(from.getCreateBy());
        setCreateTime(from.getCreateTime());
        setUpdateBy(from.getUpdateBy());
        setUpdateTime(from.getUpdateTime());
        resetChangedOnNotNull();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArticleRecord
     */
    public ArticleRecord() {
        super(Article.ARTICLE);
    }

    /**
     * Create a detached, initialised ArticleRecord
     */
    public ArticleRecord(Long id, String title, String content, String summary, Long categoryId, String thumbnail, String isTop, String status, Long viewCount, String isComment, Long createBy, LocalDateTime createTime, Long updateBy, LocalDateTime updateTime) {
        super(Article.ARTICLE);

        setId(id);
        setTitle(title);
        setContent(content);
        setSummary(summary);
        setCategoryId(categoryId);
        setThumbnail(thumbnail);
        setIsTop(isTop);
        setStatus(status);
        setViewCount(viewCount);
        setIsComment(isComment);
        setCreateBy(createBy);
        setCreateTime(createTime);
        setUpdateBy(updateBy);
        setUpdateTime(updateTime);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ArticleRecord
     */
    public ArticleRecord(me.myblog.framework.domain.jooq.tables.pojos.Article value) {
        super(Article.ARTICLE);

        if (value != null) {
            setId(value.getId());
            setTitle(value.getTitle());
            setContent(value.getContent());
            setSummary(value.getSummary());
            setCategoryId(value.getCategoryId());
            setThumbnail(value.getThumbnail());
            setIsTop(value.getIsTop());
            setStatus(value.getStatus());
            setViewCount(value.getViewCount());
            setIsComment(value.getIsComment());
            setCreateBy(value.getCreateBy());
            setCreateTime(value.getCreateTime());
            setUpdateBy(value.getUpdateBy());
            setUpdateTime(value.getUpdateTime());
            resetChangedOnNotNull();
        }
    }
}
