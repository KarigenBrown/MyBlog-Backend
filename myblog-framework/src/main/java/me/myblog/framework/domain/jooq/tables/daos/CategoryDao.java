/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import me.myblog.framework.domain.jooq.tables.Category;
import me.myblog.framework.domain.jooq.tables.records.CategoryRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 分类表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CategoryDao extends DAOImpl<CategoryRecord, me.myblog.framework.domain.jooq.tables.pojos.Category, Long> {

    /**
     * Create a new CategoryDao without any configuration
     */
    public CategoryDao() {
        super(Category.CATEGORY, me.myblog.framework.domain.jooq.tables.pojos.Category.class);
    }

    /**
     * Create a new CategoryDao with an attached configuration
     */
    public CategoryDao(Configuration configuration) {
        super(Category.CATEGORY, me.myblog.framework.domain.jooq.tables.pojos.Category.class, configuration);
    }

    @Override
    public Long getId(me.myblog.framework.domain.jooq.tables.pojos.Category object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Category.CATEGORY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchById(Long... values) {
        return fetch(Category.CATEGORY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public me.myblog.framework.domain.jooq.tables.pojos.Category fetchOneById(Long value) {
        return fetchOne(Category.CATEGORY.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchOptionalById(Long value) {
        return fetchOptional(Category.CATEGORY.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Category.CATEGORY.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchByName(String... values) {
        return fetch(Category.CATEGORY.NAME, values);
    }

    /**
     * Fetch records that have <code>pid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchRangeOfPid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Category.CATEGORY.PID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pid IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchByPid(Long... values) {
        return fetch(Category.CATEGORY.PID, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Category.CATEGORY.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchByDescription(String... values) {
        return fetch(Category.CATEGORY.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Category.CATEGORY.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchByStatus(String... values) {
        return fetch(Category.CATEGORY.STATUS, values);
    }

    /**
     * Fetch records that have <code>create_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchRangeOfCreateBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Category.CATEGORY.CREATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_by IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchByCreateBy(Long... values) {
        return fetch(Category.CATEGORY.CREATE_BY, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Category.CATEGORY.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchByCreateTime(LocalDateTime... values) {
        return fetch(Category.CATEGORY.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchRangeOfUpdateBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Category.CATEGORY.UPDATE_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_by IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchByUpdateBy(Long... values) {
        return fetch(Category.CATEGORY.UPDATE_BY, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Category.CATEGORY.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<me.myblog.framework.domain.jooq.tables.pojos.Category> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(Category.CATEGORY.UPDATE_TIME, values);
    }
}
