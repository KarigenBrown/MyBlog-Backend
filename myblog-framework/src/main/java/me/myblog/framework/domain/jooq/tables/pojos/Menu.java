/*
 * This file is generated by jOOQ.
 */
package me.myblog.framework.domain.jooq.tables.pojos;


import java.time.LocalDateTime;

import me.myblog.framework.domain.jooq.tables.interfaces.IMenu;


/**
 * 菜单权限表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Menu implements IMenu {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String menuName;
    private Long parentId;
    private Integer orderNum;
    private String path;
    private String component;
    private Integer isFrame;
    private String menuType;
    private String visible;
    private String status;
    private String perms;
    private String icon;
    private Long createBy;
    private LocalDateTime createTime;
    private Long updateBy;
    private LocalDateTime updateTime;
    private String remark;

    public Menu() {}

    public Menu(IMenu value) {
        this.id = value.getId();
        this.menuName = value.getMenuName();
        this.parentId = value.getParentId();
        this.orderNum = value.getOrderNum();
        this.path = value.getPath();
        this.component = value.getComponent();
        this.isFrame = value.getIsFrame();
        this.menuType = value.getMenuType();
        this.visible = value.getVisible();
        this.status = value.getStatus();
        this.perms = value.getPerms();
        this.icon = value.getIcon();
        this.createBy = value.getCreateBy();
        this.createTime = value.getCreateTime();
        this.updateBy = value.getUpdateBy();
        this.updateTime = value.getUpdateTime();
        this.remark = value.getRemark();
    }

    public Menu(
        Long id,
        String menuName,
        Long parentId,
        Integer orderNum,
        String path,
        String component,
        Integer isFrame,
        String menuType,
        String visible,
        String status,
        String perms,
        String icon,
        Long createBy,
        LocalDateTime createTime,
        Long updateBy,
        LocalDateTime updateTime,
        String remark
    ) {
        this.id = id;
        this.menuName = menuName;
        this.parentId = parentId;
        this.orderNum = orderNum;
        this.path = path;
        this.component = component;
        this.isFrame = isFrame;
        this.menuType = menuType;
        this.visible = visible;
        this.status = status;
        this.perms = perms;
        this.icon = icon;
        this.createBy = createBy;
        this.createTime = createTime;
        this.updateBy = updateBy;
        this.updateTime = updateTime;
        this.remark = remark;
    }

    /**
     * Getter for <code>myblog.menu.id</code>. 菜单ID
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>myblog.menu.id</code>. 菜单ID
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>myblog.menu.menu_name</code>. 菜单名称
     */
    @Override
    public String getMenuName() {
        return this.menuName;
    }

    /**
     * Setter for <code>myblog.menu.menu_name</code>. 菜单名称
     */
    @Override
    public void setMenuName(String menuName) {
        this.menuName = menuName;
    }

    /**
     * Getter for <code>myblog.menu.parent_id</code>. 父菜单ID
     */
    @Override
    public Long getParentId() {
        return this.parentId;
    }

    /**
     * Setter for <code>myblog.menu.parent_id</code>. 父菜单ID
     */
    @Override
    public void setParentId(Long parentId) {
        this.parentId = parentId;
    }

    /**
     * Getter for <code>myblog.menu.order_num</code>. 显示顺序
     */
    @Override
    public Integer getOrderNum() {
        return this.orderNum;
    }

    /**
     * Setter for <code>myblog.menu.order_num</code>. 显示顺序
     */
    @Override
    public void setOrderNum(Integer orderNum) {
        this.orderNum = orderNum;
    }

    /**
     * Getter for <code>myblog.menu.path</code>. 路由地址
     */
    @Override
    public String getPath() {
        return this.path;
    }

    /**
     * Setter for <code>myblog.menu.path</code>. 路由地址
     */
    @Override
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * Getter for <code>myblog.menu.component</code>. 组件路径
     */
    @Override
    public String getComponent() {
        return this.component;
    }

    /**
     * Setter for <code>myblog.menu.component</code>. 组件路径
     */
    @Override
    public void setComponent(String component) {
        this.component = component;
    }

    /**
     * Getter for <code>myblog.menu.is_frame</code>. 是否为外链（0是，1否）
     */
    @Override
    public Integer getIsFrame() {
        return this.isFrame;
    }

    /**
     * Setter for <code>myblog.menu.is_frame</code>. 是否为外链（0是，1否）
     */
    @Override
    public void setIsFrame(Integer isFrame) {
        this.isFrame = isFrame;
    }

    /**
     * Getter for <code>myblog.menu.menu_type</code>. 菜单类型（M目录，C菜单，F按钮）
     */
    @Override
    public String getMenuType() {
        return this.menuType;
    }

    /**
     * Setter for <code>myblog.menu.menu_type</code>. 菜单类型（M目录，C菜单，F按钮）
     */
    @Override
    public void setMenuType(String menuType) {
        this.menuType = menuType;
    }

    /**
     * Getter for <code>myblog.menu.visible</code>. 菜单状态（0显示，1隐藏）
     */
    @Override
    public String getVisible() {
        return this.visible;
    }

    /**
     * Setter for <code>myblog.menu.visible</code>. 菜单状态（0显示，1隐藏）
     */
    @Override
    public void setVisible(String visible) {
        this.visible = visible;
    }

    /**
     * Getter for <code>myblog.menu.status</code>. 菜单状态（0正常，1停用）
     */
    @Override
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>myblog.menu.status</code>. 菜单状态（0正常，1停用）
     */
    @Override
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for <code>myblog.menu.perms</code>. 权限标识
     */
    @Override
    public String getPerms() {
        return this.perms;
    }

    /**
     * Setter for <code>myblog.menu.perms</code>. 权限标识
     */
    @Override
    public void setPerms(String perms) {
        this.perms = perms;
    }

    /**
     * Getter for <code>myblog.menu.icon</code>. 菜单图标
     */
    @Override
    public String getIcon() {
        return this.icon;
    }

    /**
     * Setter for <code>myblog.menu.icon</code>. 菜单图标
     */
    @Override
    public void setIcon(String icon) {
        this.icon = icon;
    }

    /**
     * Getter for <code>myblog.menu.create_by</code>. 创建者
     */
    @Override
    public Long getCreateBy() {
        return this.createBy;
    }

    /**
     * Setter for <code>myblog.menu.create_by</code>. 创建者
     */
    @Override
    public void setCreateBy(Long createBy) {
        this.createBy = createBy;
    }

    /**
     * Getter for <code>myblog.menu.create_time</code>. 创建时间
     */
    @Override
    public LocalDateTime getCreateTime() {
        return this.createTime;
    }

    /**
     * Setter for <code>myblog.menu.create_time</code>. 创建时间
     */
    @Override
    public void setCreateTime(LocalDateTime createTime) {
        this.createTime = createTime;
    }

    /**
     * Getter for <code>myblog.menu.update_by</code>. 更新者
     */
    @Override
    public Long getUpdateBy() {
        return this.updateBy;
    }

    /**
     * Setter for <code>myblog.menu.update_by</code>. 更新者
     */
    @Override
    public void setUpdateBy(Long updateBy) {
        this.updateBy = updateBy;
    }

    /**
     * Getter for <code>myblog.menu.update_time</code>. 更新时间
     */
    @Override
    public LocalDateTime getUpdateTime() {
        return this.updateTime;
    }

    /**
     * Setter for <code>myblog.menu.update_time</code>. 更新时间
     */
    @Override
    public void setUpdateTime(LocalDateTime updateTime) {
        this.updateTime = updateTime;
    }

    /**
     * Getter for <code>myblog.menu.remark</code>. 备注
     */
    @Override
    public String getRemark() {
        return this.remark;
    }

    /**
     * Setter for <code>myblog.menu.remark</code>. 备注
     */
    @Override
    public void setRemark(String remark) {
        this.remark = remark;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Menu other = (Menu) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.menuName == null) {
            if (other.menuName != null)
                return false;
        }
        else if (!this.menuName.equals(other.menuName))
            return false;
        if (this.parentId == null) {
            if (other.parentId != null)
                return false;
        }
        else if (!this.parentId.equals(other.parentId))
            return false;
        if (this.orderNum == null) {
            if (other.orderNum != null)
                return false;
        }
        else if (!this.orderNum.equals(other.orderNum))
            return false;
        if (this.path == null) {
            if (other.path != null)
                return false;
        }
        else if (!this.path.equals(other.path))
            return false;
        if (this.component == null) {
            if (other.component != null)
                return false;
        }
        else if (!this.component.equals(other.component))
            return false;
        if (this.isFrame == null) {
            if (other.isFrame != null)
                return false;
        }
        else if (!this.isFrame.equals(other.isFrame))
            return false;
        if (this.menuType == null) {
            if (other.menuType != null)
                return false;
        }
        else if (!this.menuType.equals(other.menuType))
            return false;
        if (this.visible == null) {
            if (other.visible != null)
                return false;
        }
        else if (!this.visible.equals(other.visible))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.perms == null) {
            if (other.perms != null)
                return false;
        }
        else if (!this.perms.equals(other.perms))
            return false;
        if (this.icon == null) {
            if (other.icon != null)
                return false;
        }
        else if (!this.icon.equals(other.icon))
            return false;
        if (this.createBy == null) {
            if (other.createBy != null)
                return false;
        }
        else if (!this.createBy.equals(other.createBy))
            return false;
        if (this.createTime == null) {
            if (other.createTime != null)
                return false;
        }
        else if (!this.createTime.equals(other.createTime))
            return false;
        if (this.updateBy == null) {
            if (other.updateBy != null)
                return false;
        }
        else if (!this.updateBy.equals(other.updateBy))
            return false;
        if (this.updateTime == null) {
            if (other.updateTime != null)
                return false;
        }
        else if (!this.updateTime.equals(other.updateTime))
            return false;
        if (this.remark == null) {
            if (other.remark != null)
                return false;
        }
        else if (!this.remark.equals(other.remark))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.menuName == null) ? 0 : this.menuName.hashCode());
        result = prime * result + ((this.parentId == null) ? 0 : this.parentId.hashCode());
        result = prime * result + ((this.orderNum == null) ? 0 : this.orderNum.hashCode());
        result = prime * result + ((this.path == null) ? 0 : this.path.hashCode());
        result = prime * result + ((this.component == null) ? 0 : this.component.hashCode());
        result = prime * result + ((this.isFrame == null) ? 0 : this.isFrame.hashCode());
        result = prime * result + ((this.menuType == null) ? 0 : this.menuType.hashCode());
        result = prime * result + ((this.visible == null) ? 0 : this.visible.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.perms == null) ? 0 : this.perms.hashCode());
        result = prime * result + ((this.icon == null) ? 0 : this.icon.hashCode());
        result = prime * result + ((this.createBy == null) ? 0 : this.createBy.hashCode());
        result = prime * result + ((this.createTime == null) ? 0 : this.createTime.hashCode());
        result = prime * result + ((this.updateBy == null) ? 0 : this.updateBy.hashCode());
        result = prime * result + ((this.updateTime == null) ? 0 : this.updateTime.hashCode());
        result = prime * result + ((this.remark == null) ? 0 : this.remark.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Menu (");

        sb.append(id);
        sb.append(", ").append(menuName);
        sb.append(", ").append(parentId);
        sb.append(", ").append(orderNum);
        sb.append(", ").append(path);
        sb.append(", ").append(component);
        sb.append(", ").append(isFrame);
        sb.append(", ").append(menuType);
        sb.append(", ").append(visible);
        sb.append(", ").append(status);
        sb.append(", ").append(perms);
        sb.append(", ").append(icon);
        sb.append(", ").append(createBy);
        sb.append(", ").append(createTime);
        sb.append(", ").append(updateBy);
        sb.append(", ").append(updateTime);
        sb.append(", ").append(remark);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IMenu from) {
        setId(from.getId());
        setMenuName(from.getMenuName());
        setParentId(from.getParentId());
        setOrderNum(from.getOrderNum());
        setPath(from.getPath());
        setComponent(from.getComponent());
        setIsFrame(from.getIsFrame());
        setMenuType(from.getMenuType());
        setVisible(from.getVisible());
        setStatus(from.getStatus());
        setPerms(from.getPerms());
        setIcon(from.getIcon());
        setCreateBy(from.getCreateBy());
        setCreateTime(from.getCreateTime());
        setUpdateBy(from.getUpdateBy());
        setUpdateTime(from.getUpdateTime());
        setRemark(from.getRemark());
    }

    @Override
    public <E extends IMenu> E into(E into) {
        into.from(this);
        return into;
    }
}
